# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Verify code format
      run: dotnet format --verify-no-changes
    - name: Restore dependencies
      run: dotnet restore 'ImageAnalyzer.Api/ImageAnalyzer.Api.csproj'
    - name: Build
      run: dotnet build 'ImageAnalyzer.Api/ImageAnalyzer.Api.csproj' --no-restore
    - name: Test
      run: dotnet test 'ImageAnalyzer.Api/ImageAnalyzer.Api.csproj' --no-build --verbosity normal
    - name: Publish
      run: dotnet publish 'ImageAnalyzer.Api/ImageAnalyzer.Api.csproj' --configuration Release -o '${{ github.workspace }}/out' -r linux-x64 --self-contained false
    - name: Copy Dockerfile
      run: cp 'Dockerfile' '${{ github.workspace }}/out/Dockerfile'
    - name: Zip Package
      run: | 
        cd ${{ github.workspace }}/out 
        zip -r ${{ github.workspace }}/out.zip *
    - uses: actions/upload-artifact@v4
      with:
        name: upload-file-artifact
        path: ${{ github.workspace }}/out.zip

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: build
    strategy:
      matrix:
        dotnet-version: ['8.0.x']
    steps:
      - uses: actions/download-artifact@v4
        with: 
          name: upload-file-artifact

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: us-east-1
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_ACCESS_SECRET }}
          application_name: ImageAnalyzer-api
          environment_name: development-env
          region: us-east-1
          version_label: ${{ github.run_id }}
          version_description: ${{ github.sha }}
          deployment_package: out.zip
          use_existing_version_if_available: true